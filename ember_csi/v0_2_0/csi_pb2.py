# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: csi.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='csi.proto',
  package='csi.v0',
  syntax='proto3',
  serialized_pb=_b('\n\tcsi.proto\x12\x06\x63si.v0\"\x16\n\x14GetPluginInfoRequest\"\xad\x01\n\x15GetPluginInfoResponse\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x16\n\x0evendor_version\x18\x02 \x01(\t\x12=\n\x08manifest\x18\x03 \x03(\x0b\x32+.csi.v0.GetPluginInfoResponse.ManifestEntry\x1a/\n\rManifestEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x1e\n\x1cGetPluginCapabilitiesRequest\"O\n\x1dGetPluginCapabilitiesResponse\x12.\n\x0c\x63\x61pabilities\x18\x02 \x03(\x0b\x32\x18.csi.v0.PluginCapability\"\xbc\x01\n\x10PluginCapability\x12\x33\n\x07service\x18\x01 \x01(\x0b\x32 .csi.v0.PluginCapability.ServiceH\x00\x1ak\n\x07Service\x12\x33\n\x04type\x18\x01 \x01(\x0e\x32%.csi.v0.PluginCapability.Service.Type\"+\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x16\n\x12\x43ONTROLLER_SERVICE\x10\x01\x42\x06\n\x04type\"\x0e\n\x0cProbeRequest\"\x0f\n\rProbeResponse\"\x9a\x03\n\x13\x43reateVolumeRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12-\n\x0e\x63\x61pacity_range\x18\x02 \x01(\x0b\x32\x15.csi.v0.CapacityRange\x12\x35\n\x13volume_capabilities\x18\x03 \x03(\x0b\x32\x18.csi.v0.VolumeCapability\x12?\n\nparameters\x18\x04 \x03(\x0b\x32+.csi.v0.CreateVolumeRequest.ParametersEntry\x12[\n\x19\x63ontroller_create_secrets\x18\x05 \x03(\x0b\x32\x38.csi.v0.CreateVolumeRequest.ControllerCreateSecretsEntry\x1a\x31\n\x0fParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a>\n\x1c\x43ontrollerCreateSecretsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"6\n\x14\x43reateVolumeResponse\x12\x1e\n\x06volume\x18\x01 \x01(\x0b\x32\x0e.csi.v0.Volume\"\xf6\x03\n\x10VolumeCapability\x12\x35\n\x05\x62lock\x18\x01 \x01(\x0b\x32$.csi.v0.VolumeCapability.BlockVolumeH\x00\x12\x35\n\x05mount\x18\x02 \x01(\x0b\x32$.csi.v0.VolumeCapability.MountVolumeH\x00\x12\x38\n\x0b\x61\x63\x63\x65ss_mode\x18\x03 \x01(\x0b\x32#.csi.v0.VolumeCapability.AccessMode\x1a\r\n\x0b\x42lockVolume\x1a\x33\n\x0bMountVolume\x12\x0f\n\x07\x66s_type\x18\x01 \x01(\t\x12\x13\n\x0bmount_flags\x18\x02 \x03(\t\x1a\xe6\x01\n\nAccessMode\x12\x36\n\x04mode\x18\x01 \x01(\x0e\x32(.csi.v0.VolumeCapability.AccessMode.Mode\"\x9f\x01\n\x04Mode\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x16\n\x12SINGLE_NODE_WRITER\x10\x01\x12\x1b\n\x17SINGLE_NODE_READER_ONLY\x10\x02\x12\x1a\n\x16MULTI_NODE_READER_ONLY\x10\x03\x12\x1c\n\x18MULTI_NODE_SINGLE_WRITER\x10\x04\x12\x1b\n\x17MULTI_NODE_MULTI_WRITER\x10\x05\x42\r\n\x0b\x61\x63\x63\x65ss_type\"<\n\rCapacityRange\x12\x16\n\x0erequired_bytes\x18\x01 \x01(\x03\x12\x13\n\x0blimit_bytes\x18\x02 \x01(\x03\"\x93\x01\n\x06Volume\x12\x16\n\x0e\x63\x61pacity_bytes\x18\x01 \x01(\x03\x12\n\n\x02id\x18\x02 \x01(\t\x12\x32\n\nattributes\x18\x03 \x03(\x0b\x32\x1e.csi.v0.Volume.AttributesEntry\x1a\x31\n\x0f\x41ttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xc5\x01\n\x13\x44\x65leteVolumeRequest\x12\x11\n\tvolume_id\x18\x01 \x01(\t\x12[\n\x19\x63ontroller_delete_secrets\x18\x02 \x03(\x0b\x32\x38.csi.v0.DeleteVolumeRequest.ControllerDeleteSecretsEntry\x1a>\n\x1c\x43ontrollerDeleteSecretsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x16\n\x14\x44\x65leteVolumeResponse\"\xc8\x03\n\x1e\x43ontrollerPublishVolumeRequest\x12\x11\n\tvolume_id\x18\x01 \x01(\t\x12\x0f\n\x07node_id\x18\x02 \x01(\t\x12\x33\n\x11volume_capability\x18\x03 \x01(\x0b\x32\x18.csi.v0.VolumeCapability\x12\x10\n\x08readonly\x18\x04 \x01(\x08\x12h\n\x1a\x63ontroller_publish_secrets\x18\x05 \x03(\x0b\x32\x44.csi.v0.ControllerPublishVolumeRequest.ControllerPublishSecretsEntry\x12W\n\x11volume_attributes\x18\x06 \x03(\x0b\x32<.csi.v0.ControllerPublishVolumeRequest.VolumeAttributesEntry\x1a?\n\x1d\x43ontrollerPublishSecretsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15VolumeAttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa5\x01\n\x1f\x43ontrollerPublishVolumeResponse\x12N\n\x0cpublish_info\x18\x01 \x03(\x0b\x32\x38.csi.v0.ControllerPublishVolumeResponse.PublishInfoEntry\x1a\x32\n\x10PublishInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xf9\x01\n ControllerUnpublishVolumeRequest\x12\x11\n\tvolume_id\x18\x01 \x01(\t\x12\x0f\n\x07node_id\x18\x02 \x01(\t\x12n\n\x1c\x63ontroller_unpublish_secrets\x18\x03 \x03(\x0b\x32H.csi.v0.ControllerUnpublishVolumeRequest.ControllerUnpublishSecretsEntry\x1a\x41\n\x1f\x43ontrollerUnpublishSecretsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"#\n!ControllerUnpublishVolumeResponse\"\x82\x02\n!ValidateVolumeCapabilitiesRequest\x12\x11\n\tvolume_id\x18\x01 \x01(\t\x12\x35\n\x13volume_capabilities\x18\x02 \x03(\x0b\x32\x18.csi.v0.VolumeCapability\x12Z\n\x11volume_attributes\x18\x03 \x03(\x0b\x32?.csi.v0.ValidateVolumeCapabilitiesRequest.VolumeAttributesEntry\x1a\x37\n\x15VolumeAttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"H\n\"ValidateVolumeCapabilitiesResponse\x12\x11\n\tsupported\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"A\n\x12ListVolumesRequest\x12\x13\n\x0bmax_entries\x18\x01 \x01(\x05\x12\x16\n\x0estarting_token\x18\x02 \x01(\t\"\x86\x01\n\x13ListVolumesResponse\x12\x32\n\x07\x65ntries\x18\x01 \x03(\x0b\x32!.csi.v0.ListVolumesResponse.Entry\x12\x12\n\nnext_token\x18\x02 \x01(\t\x1a\'\n\x05\x45ntry\x12\x1e\n\x06volume\x18\x01 \x01(\x0b\x32\x0e.csi.v0.Volume\"\xbe\x01\n\x12GetCapacityRequest\x12\x35\n\x13volume_capabilities\x18\x01 \x03(\x0b\x32\x18.csi.v0.VolumeCapability\x12>\n\nparameters\x18\x02 \x03(\x0b\x32*.csi.v0.GetCapacityRequest.ParametersEntry\x1a\x31\n\x0fParametersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"1\n\x13GetCapacityResponse\x12\x1a\n\x12\x61vailable_capacity\x18\x01 \x01(\x03\"\"\n ControllerGetCapabilitiesRequest\"^\n!ControllerGetCapabilitiesResponse\x12\x39\n\x0c\x63\x61pabilities\x18\x02 \x03(\x0b\x32#.csi.v0.ControllerServiceCapability\"\x92\x02\n\x1b\x43ontrollerServiceCapability\x12\x36\n\x03rpc\x18\x01 \x01(\x0b\x32\'.csi.v0.ControllerServiceCapability.RPCH\x00\x1a\xb2\x01\n\x03RPC\x12:\n\x04type\x18\x01 \x01(\x0e\x32,.csi.v0.ControllerServiceCapability.RPC.Type\"o\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x18\n\x14\x43REATE_DELETE_VOLUME\x10\x01\x12\x1c\n\x18PUBLISH_UNPUBLISH_VOLUME\x10\x02\x12\x10\n\x0cLIST_VOLUMES\x10\x03\x12\x10\n\x0cGET_CAPACITY\x10\x04\x42\x06\n\x04type\"\x8d\x04\n\x16NodeStageVolumeRequest\x12\x11\n\tvolume_id\x18\x01 \x01(\t\x12\x45\n\x0cpublish_info\x18\x02 \x03(\x0b\x32/.csi.v0.NodeStageVolumeRequest.PublishInfoEntry\x12\x1b\n\x13staging_target_path\x18\x03 \x01(\t\x12\x33\n\x11volume_capability\x18\x04 \x01(\x0b\x32\x18.csi.v0.VolumeCapability\x12P\n\x12node_stage_secrets\x18\x05 \x03(\x0b\x32\x34.csi.v0.NodeStageVolumeRequest.NodeStageSecretsEntry\x12O\n\x11volume_attributes\x18\x06 \x03(\x0b\x32\x34.csi.v0.NodeStageVolumeRequest.VolumeAttributesEntry\x1a\x32\n\x10PublishInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15NodeStageSecretsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15VolumeAttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x19\n\x17NodeStageVolumeResponse\"J\n\x18NodeUnstageVolumeRequest\x12\x11\n\tvolume_id\x18\x01 \x01(\t\x12\x1b\n\x13staging_target_path\x18\x02 \x01(\t\"\x1b\n\x19NodeUnstageVolumeResponse\"\xc2\x04\n\x18NodePublishVolumeRequest\x12\x11\n\tvolume_id\x18\x01 \x01(\t\x12G\n\x0cpublish_info\x18\x02 \x03(\x0b\x32\x31.csi.v0.NodePublishVolumeRequest.PublishInfoEntry\x12\x1b\n\x13staging_target_path\x18\x03 \x01(\t\x12\x13\n\x0btarget_path\x18\x04 \x01(\t\x12\x33\n\x11volume_capability\x18\x05 \x01(\x0b\x32\x18.csi.v0.VolumeCapability\x12\x10\n\x08readonly\x18\x06 \x01(\x08\x12V\n\x14node_publish_secrets\x18\x07 \x03(\x0b\x32\x38.csi.v0.NodePublishVolumeRequest.NodePublishSecretsEntry\x12Q\n\x11volume_attributes\x18\x08 \x03(\x0b\x32\x36.csi.v0.NodePublishVolumeRequest.VolumeAttributesEntry\x1a\x32\n\x10PublishInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x39\n\x17NodePublishSecretsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x37\n\x15VolumeAttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x1b\n\x19NodePublishVolumeResponse\"D\n\x1aNodeUnpublishVolumeRequest\x12\x11\n\tvolume_id\x18\x01 \x01(\t\x12\x13\n\x0btarget_path\x18\x02 \x01(\t\"\x1d\n\x1bNodeUnpublishVolumeResponse\"\x12\n\x10NodeGetIdRequest\"$\n\x11NodeGetIdResponse\x12\x0f\n\x07node_id\x18\x01 \x01(\t\"\x1c\n\x1aNodeGetCapabilitiesRequest\"R\n\x1bNodeGetCapabilitiesResponse\x12\x33\n\x0c\x63\x61pabilities\x18\x01 \x03(\x0b\x32\x1d.csi.v0.NodeServiceCapability\"\xbd\x01\n\x15NodeServiceCapability\x12\x30\n\x03rpc\x18\x01 \x01(\x0b\x32!.csi.v0.NodeServiceCapability.RPCH\x00\x1aj\n\x03RPC\x12\x34\n\x04type\x18\x01 \x01(\x0e\x32&.csi.v0.NodeServiceCapability.RPC.Type\"-\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x18\n\x14STAGE_UNSTAGE_VOLUME\x10\x01\x42\x06\n\x04type2\xfa\x01\n\x08Identity\x12N\n\rGetPluginInfo\x12\x1c.csi.v0.GetPluginInfoRequest\x1a\x1d.csi.v0.GetPluginInfoResponse\"\x00\x12\x66\n\x15GetPluginCapabilities\x12$.csi.v0.GetPluginCapabilitiesRequest\x1a%.csi.v0.GetPluginCapabilitiesResponse\"\x00\x12\x36\n\x05Probe\x12\x14.csi.v0.ProbeRequest\x1a\x15.csi.v0.ProbeResponse\"\x00\x32\x87\x06\n\nController\x12K\n\x0c\x43reateVolume\x12\x1b.csi.v0.CreateVolumeRequest\x1a\x1c.csi.v0.CreateVolumeResponse\"\x00\x12K\n\x0c\x44\x65leteVolume\x12\x1b.csi.v0.DeleteVolumeRequest\x1a\x1c.csi.v0.DeleteVolumeResponse\"\x00\x12l\n\x17\x43ontrollerPublishVolume\x12&.csi.v0.ControllerPublishVolumeRequest\x1a\'.csi.v0.ControllerPublishVolumeResponse\"\x00\x12r\n\x19\x43ontrollerUnpublishVolume\x12(.csi.v0.ControllerUnpublishVolumeRequest\x1a).csi.v0.ControllerUnpublishVolumeResponse\"\x00\x12u\n\x1aValidateVolumeCapabilities\x12).csi.v0.ValidateVolumeCapabilitiesRequest\x1a*.csi.v0.ValidateVolumeCapabilitiesResponse\"\x00\x12H\n\x0bListVolumes\x12\x1a.csi.v0.ListVolumesRequest\x1a\x1b.csi.v0.ListVolumesResponse\"\x00\x12H\n\x0bGetCapacity\x12\x1a.csi.v0.GetCapacityRequest\x1a\x1b.csi.v0.GetCapacityResponse\"\x00\x12r\n\x19\x43ontrollerGetCapabilities\x12(.csi.v0.ControllerGetCapabilitiesRequest\x1a).csi.v0.ControllerGetCapabilitiesResponse\"\x00\x32\x9c\x04\n\x04Node\x12T\n\x0fNodeStageVolume\x12\x1e.csi.v0.NodeStageVolumeRequest\x1a\x1f.csi.v0.NodeStageVolumeResponse\"\x00\x12Z\n\x11NodeUnstageVolume\x12 .csi.v0.NodeUnstageVolumeRequest\x1a!.csi.v0.NodeUnstageVolumeResponse\"\x00\x12Z\n\x11NodePublishVolume\x12 .csi.v0.NodePublishVolumeRequest\x1a!.csi.v0.NodePublishVolumeResponse\"\x00\x12`\n\x13NodeUnpublishVolume\x12\".csi.v0.NodeUnpublishVolumeRequest\x1a#.csi.v0.NodeUnpublishVolumeResponse\"\x00\x12\x42\n\tNodeGetId\x12\x18.csi.v0.NodeGetIdRequest\x1a\x19.csi.v0.NodeGetIdResponse\"\x00\x12`\n\x13NodeGetCapabilities\x12\".csi.v0.NodeGetCapabilitiesRequest\x1a#.csi.v0.NodeGetCapabilitiesResponse\"\x00\x42\x05Z\x03\x63sib\x06proto3')
)



_PLUGINCAPABILITY_SERVICE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='csi.v0.PluginCapability.Service.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONTROLLER_SERVICE', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=472,
  serialized_end=515,
)
_sym_db.RegisterEnumDescriptor(_PLUGINCAPABILITY_SERVICE_TYPE)

_VOLUMECAPABILITY_ACCESSMODE_MODE = _descriptor.EnumDescriptor(
  name='Mode',
  full_name='csi.v0.VolumeCapability.AccessMode.Mode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SINGLE_NODE_WRITER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SINGLE_NODE_READER_ONLY', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTI_NODE_READER_ONLY', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTI_NODE_SINGLE_WRITER', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTI_NODE_MULTI_WRITER', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1356,
  serialized_end=1515,
)
_sym_db.RegisterEnumDescriptor(_VOLUMECAPABILITY_ACCESSMODE_MODE)

_CONTROLLERSERVICECAPABILITY_RPC_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='csi.v0.ControllerServiceCapability.RPC.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CREATE_DELETE_VOLUME', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PUBLISH_UNPUBLISH_VOLUME', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LIST_VOLUMES', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GET_CAPACITY', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3955,
  serialized_end=4066,
)
_sym_db.RegisterEnumDescriptor(_CONTROLLERSERVICECAPABILITY_RPC_TYPE)

_NODESERVICECAPABILITY_RPC_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='csi.v0.NodeServiceCapability.RPC.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STAGE_UNSTAGE_VOLUME', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=5756,
  serialized_end=5801,
)
_sym_db.RegisterEnumDescriptor(_NODESERVICECAPABILITY_RPC_TYPE)


_GETPLUGININFOREQUEST = _descriptor.Descriptor(
  name='GetPluginInfoRequest',
  full_name='csi.v0.GetPluginInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=43,
)


_GETPLUGININFORESPONSE_MANIFESTENTRY = _descriptor.Descriptor(
  name='ManifestEntry',
  full_name='csi.v0.GetPluginInfoResponse.ManifestEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.GetPluginInfoResponse.ManifestEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.GetPluginInfoResponse.ManifestEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=172,
  serialized_end=219,
)

_GETPLUGININFORESPONSE = _descriptor.Descriptor(
  name='GetPluginInfoResponse',
  full_name='csi.v0.GetPluginInfoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='csi.v0.GetPluginInfoResponse.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vendor_version', full_name='csi.v0.GetPluginInfoResponse.vendor_version', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='manifest', full_name='csi.v0.GetPluginInfoResponse.manifest', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETPLUGININFORESPONSE_MANIFESTENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=46,
  serialized_end=219,
)


_GETPLUGINCAPABILITIESREQUEST = _descriptor.Descriptor(
  name='GetPluginCapabilitiesRequest',
  full_name='csi.v0.GetPluginCapabilitiesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=221,
  serialized_end=251,
)


_GETPLUGINCAPABILITIESRESPONSE = _descriptor.Descriptor(
  name='GetPluginCapabilitiesResponse',
  full_name='csi.v0.GetPluginCapabilitiesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='capabilities', full_name='csi.v0.GetPluginCapabilitiesResponse.capabilities', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=253,
  serialized_end=332,
)


_PLUGINCAPABILITY_SERVICE = _descriptor.Descriptor(
  name='Service',
  full_name='csi.v0.PluginCapability.Service',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='csi.v0.PluginCapability.Service.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _PLUGINCAPABILITY_SERVICE_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=408,
  serialized_end=515,
)

_PLUGINCAPABILITY = _descriptor.Descriptor(
  name='PluginCapability',
  full_name='csi.v0.PluginCapability',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='service', full_name='csi.v0.PluginCapability.service', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_PLUGINCAPABILITY_SERVICE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='type', full_name='csi.v0.PluginCapability.type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=335,
  serialized_end=523,
)


_PROBEREQUEST = _descriptor.Descriptor(
  name='ProbeRequest',
  full_name='csi.v0.ProbeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=525,
  serialized_end=539,
)


_PROBERESPONSE = _descriptor.Descriptor(
  name='ProbeResponse',
  full_name='csi.v0.ProbeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=541,
  serialized_end=556,
)


_CREATEVOLUMEREQUEST_PARAMETERSENTRY = _descriptor.Descriptor(
  name='ParametersEntry',
  full_name='csi.v0.CreateVolumeRequest.ParametersEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.CreateVolumeRequest.ParametersEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.CreateVolumeRequest.ParametersEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=856,
  serialized_end=905,
)

_CREATEVOLUMEREQUEST_CONTROLLERCREATESECRETSENTRY = _descriptor.Descriptor(
  name='ControllerCreateSecretsEntry',
  full_name='csi.v0.CreateVolumeRequest.ControllerCreateSecretsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.CreateVolumeRequest.ControllerCreateSecretsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.CreateVolumeRequest.ControllerCreateSecretsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=907,
  serialized_end=969,
)

_CREATEVOLUMEREQUEST = _descriptor.Descriptor(
  name='CreateVolumeRequest',
  full_name='csi.v0.CreateVolumeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='csi.v0.CreateVolumeRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='capacity_range', full_name='csi.v0.CreateVolumeRequest.capacity_range', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='volume_capabilities', full_name='csi.v0.CreateVolumeRequest.volume_capabilities', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parameters', full_name='csi.v0.CreateVolumeRequest.parameters', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='controller_create_secrets', full_name='csi.v0.CreateVolumeRequest.controller_create_secrets', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CREATEVOLUMEREQUEST_PARAMETERSENTRY, _CREATEVOLUMEREQUEST_CONTROLLERCREATESECRETSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=559,
  serialized_end=969,
)


_CREATEVOLUMERESPONSE = _descriptor.Descriptor(
  name='CreateVolumeResponse',
  full_name='csi.v0.CreateVolumeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume', full_name='csi.v0.CreateVolumeResponse.volume', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=971,
  serialized_end=1025,
)


_VOLUMECAPABILITY_BLOCKVOLUME = _descriptor.Descriptor(
  name='BlockVolume',
  full_name='csi.v0.VolumeCapability.BlockVolume',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1216,
  serialized_end=1229,
)

_VOLUMECAPABILITY_MOUNTVOLUME = _descriptor.Descriptor(
  name='MountVolume',
  full_name='csi.v0.VolumeCapability.MountVolume',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fs_type', full_name='csi.v0.VolumeCapability.MountVolume.fs_type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mount_flags', full_name='csi.v0.VolumeCapability.MountVolume.mount_flags', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1231,
  serialized_end=1282,
)

_VOLUMECAPABILITY_ACCESSMODE = _descriptor.Descriptor(
  name='AccessMode',
  full_name='csi.v0.VolumeCapability.AccessMode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mode', full_name='csi.v0.VolumeCapability.AccessMode.mode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _VOLUMECAPABILITY_ACCESSMODE_MODE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1285,
  serialized_end=1515,
)

_VOLUMECAPABILITY = _descriptor.Descriptor(
  name='VolumeCapability',
  full_name='csi.v0.VolumeCapability',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block', full_name='csi.v0.VolumeCapability.block', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mount', full_name='csi.v0.VolumeCapability.mount', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='access_mode', full_name='csi.v0.VolumeCapability.access_mode', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_VOLUMECAPABILITY_BLOCKVOLUME, _VOLUMECAPABILITY_MOUNTVOLUME, _VOLUMECAPABILITY_ACCESSMODE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='access_type', full_name='csi.v0.VolumeCapability.access_type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1028,
  serialized_end=1530,
)


_CAPACITYRANGE = _descriptor.Descriptor(
  name='CapacityRange',
  full_name='csi.v0.CapacityRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='required_bytes', full_name='csi.v0.CapacityRange.required_bytes', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='limit_bytes', full_name='csi.v0.CapacityRange.limit_bytes', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1532,
  serialized_end=1592,
)


_VOLUME_ATTRIBUTESENTRY = _descriptor.Descriptor(
  name='AttributesEntry',
  full_name='csi.v0.Volume.AttributesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.Volume.AttributesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.Volume.AttributesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1693,
  serialized_end=1742,
)

_VOLUME = _descriptor.Descriptor(
  name='Volume',
  full_name='csi.v0.Volume',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='capacity_bytes', full_name='csi.v0.Volume.capacity_bytes', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id', full_name='csi.v0.Volume.id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='attributes', full_name='csi.v0.Volume.attributes', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_VOLUME_ATTRIBUTESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1595,
  serialized_end=1742,
)


_DELETEVOLUMEREQUEST_CONTROLLERDELETESECRETSENTRY = _descriptor.Descriptor(
  name='ControllerDeleteSecretsEntry',
  full_name='csi.v0.DeleteVolumeRequest.ControllerDeleteSecretsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.DeleteVolumeRequest.ControllerDeleteSecretsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.DeleteVolumeRequest.ControllerDeleteSecretsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1880,
  serialized_end=1942,
)

_DELETEVOLUMEREQUEST = _descriptor.Descriptor(
  name='DeleteVolumeRequest',
  full_name='csi.v0.DeleteVolumeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_id', full_name='csi.v0.DeleteVolumeRequest.volume_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='controller_delete_secrets', full_name='csi.v0.DeleteVolumeRequest.controller_delete_secrets', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_DELETEVOLUMEREQUEST_CONTROLLERDELETESECRETSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1745,
  serialized_end=1942,
)


_DELETEVOLUMERESPONSE = _descriptor.Descriptor(
  name='DeleteVolumeResponse',
  full_name='csi.v0.DeleteVolumeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1944,
  serialized_end=1966,
)


_CONTROLLERPUBLISHVOLUMEREQUEST_CONTROLLERPUBLISHSECRETSENTRY = _descriptor.Descriptor(
  name='ControllerPublishSecretsEntry',
  full_name='csi.v0.ControllerPublishVolumeRequest.ControllerPublishSecretsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.ControllerPublishVolumeRequest.ControllerPublishSecretsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.ControllerPublishVolumeRequest.ControllerPublishSecretsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2305,
  serialized_end=2368,
)

_CONTROLLERPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY = _descriptor.Descriptor(
  name='VolumeAttributesEntry',
  full_name='csi.v0.ControllerPublishVolumeRequest.VolumeAttributesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.ControllerPublishVolumeRequest.VolumeAttributesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.ControllerPublishVolumeRequest.VolumeAttributesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2370,
  serialized_end=2425,
)

_CONTROLLERPUBLISHVOLUMEREQUEST = _descriptor.Descriptor(
  name='ControllerPublishVolumeRequest',
  full_name='csi.v0.ControllerPublishVolumeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_id', full_name='csi.v0.ControllerPublishVolumeRequest.volume_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='node_id', full_name='csi.v0.ControllerPublishVolumeRequest.node_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='volume_capability', full_name='csi.v0.ControllerPublishVolumeRequest.volume_capability', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='readonly', full_name='csi.v0.ControllerPublishVolumeRequest.readonly', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='controller_publish_secrets', full_name='csi.v0.ControllerPublishVolumeRequest.controller_publish_secrets', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='volume_attributes', full_name='csi.v0.ControllerPublishVolumeRequest.volume_attributes', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CONTROLLERPUBLISHVOLUMEREQUEST_CONTROLLERPUBLISHSECRETSENTRY, _CONTROLLERPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1969,
  serialized_end=2425,
)


_CONTROLLERPUBLISHVOLUMERESPONSE_PUBLISHINFOENTRY = _descriptor.Descriptor(
  name='PublishInfoEntry',
  full_name='csi.v0.ControllerPublishVolumeResponse.PublishInfoEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.ControllerPublishVolumeResponse.PublishInfoEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.ControllerPublishVolumeResponse.PublishInfoEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2543,
  serialized_end=2593,
)

_CONTROLLERPUBLISHVOLUMERESPONSE = _descriptor.Descriptor(
  name='ControllerPublishVolumeResponse',
  full_name='csi.v0.ControllerPublishVolumeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='publish_info', full_name='csi.v0.ControllerPublishVolumeResponse.publish_info', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CONTROLLERPUBLISHVOLUMERESPONSE_PUBLISHINFOENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2428,
  serialized_end=2593,
)


_CONTROLLERUNPUBLISHVOLUMEREQUEST_CONTROLLERUNPUBLISHSECRETSENTRY = _descriptor.Descriptor(
  name='ControllerUnpublishSecretsEntry',
  full_name='csi.v0.ControllerUnpublishVolumeRequest.ControllerUnpublishSecretsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.ControllerUnpublishVolumeRequest.ControllerUnpublishSecretsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.ControllerUnpublishVolumeRequest.ControllerUnpublishSecretsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2780,
  serialized_end=2845,
)

_CONTROLLERUNPUBLISHVOLUMEREQUEST = _descriptor.Descriptor(
  name='ControllerUnpublishVolumeRequest',
  full_name='csi.v0.ControllerUnpublishVolumeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_id', full_name='csi.v0.ControllerUnpublishVolumeRequest.volume_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='node_id', full_name='csi.v0.ControllerUnpublishVolumeRequest.node_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='controller_unpublish_secrets', full_name='csi.v0.ControllerUnpublishVolumeRequest.controller_unpublish_secrets', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CONTROLLERUNPUBLISHVOLUMEREQUEST_CONTROLLERUNPUBLISHSECRETSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2596,
  serialized_end=2845,
)


_CONTROLLERUNPUBLISHVOLUMERESPONSE = _descriptor.Descriptor(
  name='ControllerUnpublishVolumeResponse',
  full_name='csi.v0.ControllerUnpublishVolumeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2847,
  serialized_end=2882,
)


_VALIDATEVOLUMECAPABILITIESREQUEST_VOLUMEATTRIBUTESENTRY = _descriptor.Descriptor(
  name='VolumeAttributesEntry',
  full_name='csi.v0.ValidateVolumeCapabilitiesRequest.VolumeAttributesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.ValidateVolumeCapabilitiesRequest.VolumeAttributesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.ValidateVolumeCapabilitiesRequest.VolumeAttributesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2370,
  serialized_end=2425,
)

_VALIDATEVOLUMECAPABILITIESREQUEST = _descriptor.Descriptor(
  name='ValidateVolumeCapabilitiesRequest',
  full_name='csi.v0.ValidateVolumeCapabilitiesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_id', full_name='csi.v0.ValidateVolumeCapabilitiesRequest.volume_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='volume_capabilities', full_name='csi.v0.ValidateVolumeCapabilitiesRequest.volume_capabilities', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='volume_attributes', full_name='csi.v0.ValidateVolumeCapabilitiesRequest.volume_attributes', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_VALIDATEVOLUMECAPABILITIESREQUEST_VOLUMEATTRIBUTESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2885,
  serialized_end=3143,
)


_VALIDATEVOLUMECAPABILITIESRESPONSE = _descriptor.Descriptor(
  name='ValidateVolumeCapabilitiesResponse',
  full_name='csi.v0.ValidateVolumeCapabilitiesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='supported', full_name='csi.v0.ValidateVolumeCapabilitiesResponse.supported', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='csi.v0.ValidateVolumeCapabilitiesResponse.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3145,
  serialized_end=3217,
)


_LISTVOLUMESREQUEST = _descriptor.Descriptor(
  name='ListVolumesRequest',
  full_name='csi.v0.ListVolumesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='max_entries', full_name='csi.v0.ListVolumesRequest.max_entries', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='starting_token', full_name='csi.v0.ListVolumesRequest.starting_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3219,
  serialized_end=3284,
)


_LISTVOLUMESRESPONSE_ENTRY = _descriptor.Descriptor(
  name='Entry',
  full_name='csi.v0.ListVolumesResponse.Entry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume', full_name='csi.v0.ListVolumesResponse.Entry.volume', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3382,
  serialized_end=3421,
)

_LISTVOLUMESRESPONSE = _descriptor.Descriptor(
  name='ListVolumesResponse',
  full_name='csi.v0.ListVolumesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entries', full_name='csi.v0.ListVolumesResponse.entries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='next_token', full_name='csi.v0.ListVolumesResponse.next_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_LISTVOLUMESRESPONSE_ENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3287,
  serialized_end=3421,
)


_GETCAPACITYREQUEST_PARAMETERSENTRY = _descriptor.Descriptor(
  name='ParametersEntry',
  full_name='csi.v0.GetCapacityRequest.ParametersEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.GetCapacityRequest.ParametersEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.GetCapacityRequest.ParametersEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=856,
  serialized_end=905,
)

_GETCAPACITYREQUEST = _descriptor.Descriptor(
  name='GetCapacityRequest',
  full_name='csi.v0.GetCapacityRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_capabilities', full_name='csi.v0.GetCapacityRequest.volume_capabilities', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parameters', full_name='csi.v0.GetCapacityRequest.parameters', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETCAPACITYREQUEST_PARAMETERSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3424,
  serialized_end=3614,
)


_GETCAPACITYRESPONSE = _descriptor.Descriptor(
  name='GetCapacityResponse',
  full_name='csi.v0.GetCapacityResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='available_capacity', full_name='csi.v0.GetCapacityResponse.available_capacity', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3616,
  serialized_end=3665,
)


_CONTROLLERGETCAPABILITIESREQUEST = _descriptor.Descriptor(
  name='ControllerGetCapabilitiesRequest',
  full_name='csi.v0.ControllerGetCapabilitiesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3667,
  serialized_end=3701,
)


_CONTROLLERGETCAPABILITIESRESPONSE = _descriptor.Descriptor(
  name='ControllerGetCapabilitiesResponse',
  full_name='csi.v0.ControllerGetCapabilitiesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='capabilities', full_name='csi.v0.ControllerGetCapabilitiesResponse.capabilities', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3703,
  serialized_end=3797,
)


_CONTROLLERSERVICECAPABILITY_RPC = _descriptor.Descriptor(
  name='RPC',
  full_name='csi.v0.ControllerServiceCapability.RPC',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='csi.v0.ControllerServiceCapability.RPC.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CONTROLLERSERVICECAPABILITY_RPC_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3888,
  serialized_end=4066,
)

_CONTROLLERSERVICECAPABILITY = _descriptor.Descriptor(
  name='ControllerServiceCapability',
  full_name='csi.v0.ControllerServiceCapability',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rpc', full_name='csi.v0.ControllerServiceCapability.rpc', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CONTROLLERSERVICECAPABILITY_RPC, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='type', full_name='csi.v0.ControllerServiceCapability.type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3800,
  serialized_end=4074,
)


_NODESTAGEVOLUMEREQUEST_PUBLISHINFOENTRY = _descriptor.Descriptor(
  name='PublishInfoEntry',
  full_name='csi.v0.NodeStageVolumeRequest.PublishInfoEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.NodeStageVolumeRequest.PublishInfoEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.NodeStageVolumeRequest.PublishInfoEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2543,
  serialized_end=2593,
)

_NODESTAGEVOLUMEREQUEST_NODESTAGESECRETSENTRY = _descriptor.Descriptor(
  name='NodeStageSecretsEntry',
  full_name='csi.v0.NodeStageVolumeRequest.NodeStageSecretsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.NodeStageVolumeRequest.NodeStageSecretsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.NodeStageVolumeRequest.NodeStageSecretsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4490,
  serialized_end=4545,
)

_NODESTAGEVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY = _descriptor.Descriptor(
  name='VolumeAttributesEntry',
  full_name='csi.v0.NodeStageVolumeRequest.VolumeAttributesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.NodeStageVolumeRequest.VolumeAttributesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.NodeStageVolumeRequest.VolumeAttributesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2370,
  serialized_end=2425,
)

_NODESTAGEVOLUMEREQUEST = _descriptor.Descriptor(
  name='NodeStageVolumeRequest',
  full_name='csi.v0.NodeStageVolumeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_id', full_name='csi.v0.NodeStageVolumeRequest.volume_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='publish_info', full_name='csi.v0.NodeStageVolumeRequest.publish_info', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='staging_target_path', full_name='csi.v0.NodeStageVolumeRequest.staging_target_path', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='volume_capability', full_name='csi.v0.NodeStageVolumeRequest.volume_capability', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='node_stage_secrets', full_name='csi.v0.NodeStageVolumeRequest.node_stage_secrets', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='volume_attributes', full_name='csi.v0.NodeStageVolumeRequest.volume_attributes', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_NODESTAGEVOLUMEREQUEST_PUBLISHINFOENTRY, _NODESTAGEVOLUMEREQUEST_NODESTAGESECRETSENTRY, _NODESTAGEVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4077,
  serialized_end=4602,
)


_NODESTAGEVOLUMERESPONSE = _descriptor.Descriptor(
  name='NodeStageVolumeResponse',
  full_name='csi.v0.NodeStageVolumeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4604,
  serialized_end=4629,
)


_NODEUNSTAGEVOLUMEREQUEST = _descriptor.Descriptor(
  name='NodeUnstageVolumeRequest',
  full_name='csi.v0.NodeUnstageVolumeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_id', full_name='csi.v0.NodeUnstageVolumeRequest.volume_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='staging_target_path', full_name='csi.v0.NodeUnstageVolumeRequest.staging_target_path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4631,
  serialized_end=4705,
)


_NODEUNSTAGEVOLUMERESPONSE = _descriptor.Descriptor(
  name='NodeUnstageVolumeResponse',
  full_name='csi.v0.NodeUnstageVolumeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4707,
  serialized_end=4734,
)


_NODEPUBLISHVOLUMEREQUEST_PUBLISHINFOENTRY = _descriptor.Descriptor(
  name='PublishInfoEntry',
  full_name='csi.v0.NodePublishVolumeRequest.PublishInfoEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.NodePublishVolumeRequest.PublishInfoEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.NodePublishVolumeRequest.PublishInfoEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2543,
  serialized_end=2593,
)

_NODEPUBLISHVOLUMEREQUEST_NODEPUBLISHSECRETSENTRY = _descriptor.Descriptor(
  name='NodePublishSecretsEntry',
  full_name='csi.v0.NodePublishVolumeRequest.NodePublishSecretsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.NodePublishVolumeRequest.NodePublishSecretsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.NodePublishVolumeRequest.NodePublishSecretsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5201,
  serialized_end=5258,
)

_NODEPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY = _descriptor.Descriptor(
  name='VolumeAttributesEntry',
  full_name='csi.v0.NodePublishVolumeRequest.VolumeAttributesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='csi.v0.NodePublishVolumeRequest.VolumeAttributesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='csi.v0.NodePublishVolumeRequest.VolumeAttributesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2370,
  serialized_end=2425,
)

_NODEPUBLISHVOLUMEREQUEST = _descriptor.Descriptor(
  name='NodePublishVolumeRequest',
  full_name='csi.v0.NodePublishVolumeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_id', full_name='csi.v0.NodePublishVolumeRequest.volume_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='publish_info', full_name='csi.v0.NodePublishVolumeRequest.publish_info', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='staging_target_path', full_name='csi.v0.NodePublishVolumeRequest.staging_target_path', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target_path', full_name='csi.v0.NodePublishVolumeRequest.target_path', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='volume_capability', full_name='csi.v0.NodePublishVolumeRequest.volume_capability', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='readonly', full_name='csi.v0.NodePublishVolumeRequest.readonly', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='node_publish_secrets', full_name='csi.v0.NodePublishVolumeRequest.node_publish_secrets', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='volume_attributes', full_name='csi.v0.NodePublishVolumeRequest.volume_attributes', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_NODEPUBLISHVOLUMEREQUEST_PUBLISHINFOENTRY, _NODEPUBLISHVOLUMEREQUEST_NODEPUBLISHSECRETSENTRY, _NODEPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4737,
  serialized_end=5315,
)


_NODEPUBLISHVOLUMERESPONSE = _descriptor.Descriptor(
  name='NodePublishVolumeResponse',
  full_name='csi.v0.NodePublishVolumeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5317,
  serialized_end=5344,
)


_NODEUNPUBLISHVOLUMEREQUEST = _descriptor.Descriptor(
  name='NodeUnpublishVolumeRequest',
  full_name='csi.v0.NodeUnpublishVolumeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_id', full_name='csi.v0.NodeUnpublishVolumeRequest.volume_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target_path', full_name='csi.v0.NodeUnpublishVolumeRequest.target_path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5346,
  serialized_end=5414,
)


_NODEUNPUBLISHVOLUMERESPONSE = _descriptor.Descriptor(
  name='NodeUnpublishVolumeResponse',
  full_name='csi.v0.NodeUnpublishVolumeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5416,
  serialized_end=5445,
)


_NODEGETIDREQUEST = _descriptor.Descriptor(
  name='NodeGetIdRequest',
  full_name='csi.v0.NodeGetIdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5447,
  serialized_end=5465,
)


_NODEGETIDRESPONSE = _descriptor.Descriptor(
  name='NodeGetIdResponse',
  full_name='csi.v0.NodeGetIdResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node_id', full_name='csi.v0.NodeGetIdResponse.node_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5467,
  serialized_end=5503,
)


_NODEGETCAPABILITIESREQUEST = _descriptor.Descriptor(
  name='NodeGetCapabilitiesRequest',
  full_name='csi.v0.NodeGetCapabilitiesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5505,
  serialized_end=5533,
)


_NODEGETCAPABILITIESRESPONSE = _descriptor.Descriptor(
  name='NodeGetCapabilitiesResponse',
  full_name='csi.v0.NodeGetCapabilitiesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='capabilities', full_name='csi.v0.NodeGetCapabilitiesResponse.capabilities', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5535,
  serialized_end=5617,
)


_NODESERVICECAPABILITY_RPC = _descriptor.Descriptor(
  name='RPC',
  full_name='csi.v0.NodeServiceCapability.RPC',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='csi.v0.NodeServiceCapability.RPC.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _NODESERVICECAPABILITY_RPC_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5695,
  serialized_end=5801,
)

_NODESERVICECAPABILITY = _descriptor.Descriptor(
  name='NodeServiceCapability',
  full_name='csi.v0.NodeServiceCapability',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rpc', full_name='csi.v0.NodeServiceCapability.rpc', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_NODESERVICECAPABILITY_RPC, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='type', full_name='csi.v0.NodeServiceCapability.type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=5620,
  serialized_end=5809,
)

_GETPLUGININFORESPONSE_MANIFESTENTRY.containing_type = _GETPLUGININFORESPONSE
_GETPLUGININFORESPONSE.fields_by_name['manifest'].message_type = _GETPLUGININFORESPONSE_MANIFESTENTRY
_GETPLUGINCAPABILITIESRESPONSE.fields_by_name['capabilities'].message_type = _PLUGINCAPABILITY
_PLUGINCAPABILITY_SERVICE.fields_by_name['type'].enum_type = _PLUGINCAPABILITY_SERVICE_TYPE
_PLUGINCAPABILITY_SERVICE.containing_type = _PLUGINCAPABILITY
_PLUGINCAPABILITY_SERVICE_TYPE.containing_type = _PLUGINCAPABILITY_SERVICE
_PLUGINCAPABILITY.fields_by_name['service'].message_type = _PLUGINCAPABILITY_SERVICE
_PLUGINCAPABILITY.oneofs_by_name['type'].fields.append(
  _PLUGINCAPABILITY.fields_by_name['service'])
_PLUGINCAPABILITY.fields_by_name['service'].containing_oneof = _PLUGINCAPABILITY.oneofs_by_name['type']
_CREATEVOLUMEREQUEST_PARAMETERSENTRY.containing_type = _CREATEVOLUMEREQUEST
_CREATEVOLUMEREQUEST_CONTROLLERCREATESECRETSENTRY.containing_type = _CREATEVOLUMEREQUEST
_CREATEVOLUMEREQUEST.fields_by_name['capacity_range'].message_type = _CAPACITYRANGE
_CREATEVOLUMEREQUEST.fields_by_name['volume_capabilities'].message_type = _VOLUMECAPABILITY
_CREATEVOLUMEREQUEST.fields_by_name['parameters'].message_type = _CREATEVOLUMEREQUEST_PARAMETERSENTRY
_CREATEVOLUMEREQUEST.fields_by_name['controller_create_secrets'].message_type = _CREATEVOLUMEREQUEST_CONTROLLERCREATESECRETSENTRY
_CREATEVOLUMERESPONSE.fields_by_name['volume'].message_type = _VOLUME
_VOLUMECAPABILITY_BLOCKVOLUME.containing_type = _VOLUMECAPABILITY
_VOLUMECAPABILITY_MOUNTVOLUME.containing_type = _VOLUMECAPABILITY
_VOLUMECAPABILITY_ACCESSMODE.fields_by_name['mode'].enum_type = _VOLUMECAPABILITY_ACCESSMODE_MODE
_VOLUMECAPABILITY_ACCESSMODE.containing_type = _VOLUMECAPABILITY
_VOLUMECAPABILITY_ACCESSMODE_MODE.containing_type = _VOLUMECAPABILITY_ACCESSMODE
_VOLUMECAPABILITY.fields_by_name['block'].message_type = _VOLUMECAPABILITY_BLOCKVOLUME
_VOLUMECAPABILITY.fields_by_name['mount'].message_type = _VOLUMECAPABILITY_MOUNTVOLUME
_VOLUMECAPABILITY.fields_by_name['access_mode'].message_type = _VOLUMECAPABILITY_ACCESSMODE
_VOLUMECAPABILITY.oneofs_by_name['access_type'].fields.append(
  _VOLUMECAPABILITY.fields_by_name['block'])
_VOLUMECAPABILITY.fields_by_name['block'].containing_oneof = _VOLUMECAPABILITY.oneofs_by_name['access_type']
_VOLUMECAPABILITY.oneofs_by_name['access_type'].fields.append(
  _VOLUMECAPABILITY.fields_by_name['mount'])
_VOLUMECAPABILITY.fields_by_name['mount'].containing_oneof = _VOLUMECAPABILITY.oneofs_by_name['access_type']
_VOLUME_ATTRIBUTESENTRY.containing_type = _VOLUME
_VOLUME.fields_by_name['attributes'].message_type = _VOLUME_ATTRIBUTESENTRY
_DELETEVOLUMEREQUEST_CONTROLLERDELETESECRETSENTRY.containing_type = _DELETEVOLUMEREQUEST
_DELETEVOLUMEREQUEST.fields_by_name['controller_delete_secrets'].message_type = _DELETEVOLUMEREQUEST_CONTROLLERDELETESECRETSENTRY
_CONTROLLERPUBLISHVOLUMEREQUEST_CONTROLLERPUBLISHSECRETSENTRY.containing_type = _CONTROLLERPUBLISHVOLUMEREQUEST
_CONTROLLERPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY.containing_type = _CONTROLLERPUBLISHVOLUMEREQUEST
_CONTROLLERPUBLISHVOLUMEREQUEST.fields_by_name['volume_capability'].message_type = _VOLUMECAPABILITY
_CONTROLLERPUBLISHVOLUMEREQUEST.fields_by_name['controller_publish_secrets'].message_type = _CONTROLLERPUBLISHVOLUMEREQUEST_CONTROLLERPUBLISHSECRETSENTRY
_CONTROLLERPUBLISHVOLUMEREQUEST.fields_by_name['volume_attributes'].message_type = _CONTROLLERPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY
_CONTROLLERPUBLISHVOLUMERESPONSE_PUBLISHINFOENTRY.containing_type = _CONTROLLERPUBLISHVOLUMERESPONSE
_CONTROLLERPUBLISHVOLUMERESPONSE.fields_by_name['publish_info'].message_type = _CONTROLLERPUBLISHVOLUMERESPONSE_PUBLISHINFOENTRY
_CONTROLLERUNPUBLISHVOLUMEREQUEST_CONTROLLERUNPUBLISHSECRETSENTRY.containing_type = _CONTROLLERUNPUBLISHVOLUMEREQUEST
_CONTROLLERUNPUBLISHVOLUMEREQUEST.fields_by_name['controller_unpublish_secrets'].message_type = _CONTROLLERUNPUBLISHVOLUMEREQUEST_CONTROLLERUNPUBLISHSECRETSENTRY
_VALIDATEVOLUMECAPABILITIESREQUEST_VOLUMEATTRIBUTESENTRY.containing_type = _VALIDATEVOLUMECAPABILITIESREQUEST
_VALIDATEVOLUMECAPABILITIESREQUEST.fields_by_name['volume_capabilities'].message_type = _VOLUMECAPABILITY
_VALIDATEVOLUMECAPABILITIESREQUEST.fields_by_name['volume_attributes'].message_type = _VALIDATEVOLUMECAPABILITIESREQUEST_VOLUMEATTRIBUTESENTRY
_LISTVOLUMESRESPONSE_ENTRY.fields_by_name['volume'].message_type = _VOLUME
_LISTVOLUMESRESPONSE_ENTRY.containing_type = _LISTVOLUMESRESPONSE
_LISTVOLUMESRESPONSE.fields_by_name['entries'].message_type = _LISTVOLUMESRESPONSE_ENTRY
_GETCAPACITYREQUEST_PARAMETERSENTRY.containing_type = _GETCAPACITYREQUEST
_GETCAPACITYREQUEST.fields_by_name['volume_capabilities'].message_type = _VOLUMECAPABILITY
_GETCAPACITYREQUEST.fields_by_name['parameters'].message_type = _GETCAPACITYREQUEST_PARAMETERSENTRY
_CONTROLLERGETCAPABILITIESRESPONSE.fields_by_name['capabilities'].message_type = _CONTROLLERSERVICECAPABILITY
_CONTROLLERSERVICECAPABILITY_RPC.fields_by_name['type'].enum_type = _CONTROLLERSERVICECAPABILITY_RPC_TYPE
_CONTROLLERSERVICECAPABILITY_RPC.containing_type = _CONTROLLERSERVICECAPABILITY
_CONTROLLERSERVICECAPABILITY_RPC_TYPE.containing_type = _CONTROLLERSERVICECAPABILITY_RPC
_CONTROLLERSERVICECAPABILITY.fields_by_name['rpc'].message_type = _CONTROLLERSERVICECAPABILITY_RPC
_CONTROLLERSERVICECAPABILITY.oneofs_by_name['type'].fields.append(
  _CONTROLLERSERVICECAPABILITY.fields_by_name['rpc'])
_CONTROLLERSERVICECAPABILITY.fields_by_name['rpc'].containing_oneof = _CONTROLLERSERVICECAPABILITY.oneofs_by_name['type']
_NODESTAGEVOLUMEREQUEST_PUBLISHINFOENTRY.containing_type = _NODESTAGEVOLUMEREQUEST
_NODESTAGEVOLUMEREQUEST_NODESTAGESECRETSENTRY.containing_type = _NODESTAGEVOLUMEREQUEST
_NODESTAGEVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY.containing_type = _NODESTAGEVOLUMEREQUEST
_NODESTAGEVOLUMEREQUEST.fields_by_name['publish_info'].message_type = _NODESTAGEVOLUMEREQUEST_PUBLISHINFOENTRY
_NODESTAGEVOLUMEREQUEST.fields_by_name['volume_capability'].message_type = _VOLUMECAPABILITY
_NODESTAGEVOLUMEREQUEST.fields_by_name['node_stage_secrets'].message_type = _NODESTAGEVOLUMEREQUEST_NODESTAGESECRETSENTRY
_NODESTAGEVOLUMEREQUEST.fields_by_name['volume_attributes'].message_type = _NODESTAGEVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY
_NODEPUBLISHVOLUMEREQUEST_PUBLISHINFOENTRY.containing_type = _NODEPUBLISHVOLUMEREQUEST
_NODEPUBLISHVOLUMEREQUEST_NODEPUBLISHSECRETSENTRY.containing_type = _NODEPUBLISHVOLUMEREQUEST
_NODEPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY.containing_type = _NODEPUBLISHVOLUMEREQUEST
_NODEPUBLISHVOLUMEREQUEST.fields_by_name['publish_info'].message_type = _NODEPUBLISHVOLUMEREQUEST_PUBLISHINFOENTRY
_NODEPUBLISHVOLUMEREQUEST.fields_by_name['volume_capability'].message_type = _VOLUMECAPABILITY
_NODEPUBLISHVOLUMEREQUEST.fields_by_name['node_publish_secrets'].message_type = _NODEPUBLISHVOLUMEREQUEST_NODEPUBLISHSECRETSENTRY
_NODEPUBLISHVOLUMEREQUEST.fields_by_name['volume_attributes'].message_type = _NODEPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY
_NODEGETCAPABILITIESRESPONSE.fields_by_name['capabilities'].message_type = _NODESERVICECAPABILITY
_NODESERVICECAPABILITY_RPC.fields_by_name['type'].enum_type = _NODESERVICECAPABILITY_RPC_TYPE
_NODESERVICECAPABILITY_RPC.containing_type = _NODESERVICECAPABILITY
_NODESERVICECAPABILITY_RPC_TYPE.containing_type = _NODESERVICECAPABILITY_RPC
_NODESERVICECAPABILITY.fields_by_name['rpc'].message_type = _NODESERVICECAPABILITY_RPC
_NODESERVICECAPABILITY.oneofs_by_name['type'].fields.append(
  _NODESERVICECAPABILITY.fields_by_name['rpc'])
_NODESERVICECAPABILITY.fields_by_name['rpc'].containing_oneof = _NODESERVICECAPABILITY.oneofs_by_name['type']
DESCRIPTOR.message_types_by_name['GetPluginInfoRequest'] = _GETPLUGININFOREQUEST
DESCRIPTOR.message_types_by_name['GetPluginInfoResponse'] = _GETPLUGININFORESPONSE
DESCRIPTOR.message_types_by_name['GetPluginCapabilitiesRequest'] = _GETPLUGINCAPABILITIESREQUEST
DESCRIPTOR.message_types_by_name['GetPluginCapabilitiesResponse'] = _GETPLUGINCAPABILITIESRESPONSE
DESCRIPTOR.message_types_by_name['PluginCapability'] = _PLUGINCAPABILITY
DESCRIPTOR.message_types_by_name['ProbeRequest'] = _PROBEREQUEST
DESCRIPTOR.message_types_by_name['ProbeResponse'] = _PROBERESPONSE
DESCRIPTOR.message_types_by_name['CreateVolumeRequest'] = _CREATEVOLUMEREQUEST
DESCRIPTOR.message_types_by_name['CreateVolumeResponse'] = _CREATEVOLUMERESPONSE
DESCRIPTOR.message_types_by_name['VolumeCapability'] = _VOLUMECAPABILITY
DESCRIPTOR.message_types_by_name['CapacityRange'] = _CAPACITYRANGE
DESCRIPTOR.message_types_by_name['Volume'] = _VOLUME
DESCRIPTOR.message_types_by_name['DeleteVolumeRequest'] = _DELETEVOLUMEREQUEST
DESCRIPTOR.message_types_by_name['DeleteVolumeResponse'] = _DELETEVOLUMERESPONSE
DESCRIPTOR.message_types_by_name['ControllerPublishVolumeRequest'] = _CONTROLLERPUBLISHVOLUMEREQUEST
DESCRIPTOR.message_types_by_name['ControllerPublishVolumeResponse'] = _CONTROLLERPUBLISHVOLUMERESPONSE
DESCRIPTOR.message_types_by_name['ControllerUnpublishVolumeRequest'] = _CONTROLLERUNPUBLISHVOLUMEREQUEST
DESCRIPTOR.message_types_by_name['ControllerUnpublishVolumeResponse'] = _CONTROLLERUNPUBLISHVOLUMERESPONSE
DESCRIPTOR.message_types_by_name['ValidateVolumeCapabilitiesRequest'] = _VALIDATEVOLUMECAPABILITIESREQUEST
DESCRIPTOR.message_types_by_name['ValidateVolumeCapabilitiesResponse'] = _VALIDATEVOLUMECAPABILITIESRESPONSE
DESCRIPTOR.message_types_by_name['ListVolumesRequest'] = _LISTVOLUMESREQUEST
DESCRIPTOR.message_types_by_name['ListVolumesResponse'] = _LISTVOLUMESRESPONSE
DESCRIPTOR.message_types_by_name['GetCapacityRequest'] = _GETCAPACITYREQUEST
DESCRIPTOR.message_types_by_name['GetCapacityResponse'] = _GETCAPACITYRESPONSE
DESCRIPTOR.message_types_by_name['ControllerGetCapabilitiesRequest'] = _CONTROLLERGETCAPABILITIESREQUEST
DESCRIPTOR.message_types_by_name['ControllerGetCapabilitiesResponse'] = _CONTROLLERGETCAPABILITIESRESPONSE
DESCRIPTOR.message_types_by_name['ControllerServiceCapability'] = _CONTROLLERSERVICECAPABILITY
DESCRIPTOR.message_types_by_name['NodeStageVolumeRequest'] = _NODESTAGEVOLUMEREQUEST
DESCRIPTOR.message_types_by_name['NodeStageVolumeResponse'] = _NODESTAGEVOLUMERESPONSE
DESCRIPTOR.message_types_by_name['NodeUnstageVolumeRequest'] = _NODEUNSTAGEVOLUMEREQUEST
DESCRIPTOR.message_types_by_name['NodeUnstageVolumeResponse'] = _NODEUNSTAGEVOLUMERESPONSE
DESCRIPTOR.message_types_by_name['NodePublishVolumeRequest'] = _NODEPUBLISHVOLUMEREQUEST
DESCRIPTOR.message_types_by_name['NodePublishVolumeResponse'] = _NODEPUBLISHVOLUMERESPONSE
DESCRIPTOR.message_types_by_name['NodeUnpublishVolumeRequest'] = _NODEUNPUBLISHVOLUMEREQUEST
DESCRIPTOR.message_types_by_name['NodeUnpublishVolumeResponse'] = _NODEUNPUBLISHVOLUMERESPONSE
DESCRIPTOR.message_types_by_name['NodeGetIdRequest'] = _NODEGETIDREQUEST
DESCRIPTOR.message_types_by_name['NodeGetIdResponse'] = _NODEGETIDRESPONSE
DESCRIPTOR.message_types_by_name['NodeGetCapabilitiesRequest'] = _NODEGETCAPABILITIESREQUEST
DESCRIPTOR.message_types_by_name['NodeGetCapabilitiesResponse'] = _NODEGETCAPABILITIESRESPONSE
DESCRIPTOR.message_types_by_name['NodeServiceCapability'] = _NODESERVICECAPABILITY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GetPluginInfoRequest = _reflection.GeneratedProtocolMessageType('GetPluginInfoRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETPLUGININFOREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.GetPluginInfoRequest)
  ))
_sym_db.RegisterMessage(GetPluginInfoRequest)

GetPluginInfoResponse = _reflection.GeneratedProtocolMessageType('GetPluginInfoResponse', (_message.Message,), dict(

  ManifestEntry = _reflection.GeneratedProtocolMessageType('ManifestEntry', (_message.Message,), dict(
    DESCRIPTOR = _GETPLUGININFORESPONSE_MANIFESTENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.GetPluginInfoResponse.ManifestEntry)
    ))
  ,
  DESCRIPTOR = _GETPLUGININFORESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.GetPluginInfoResponse)
  ))
_sym_db.RegisterMessage(GetPluginInfoResponse)
_sym_db.RegisterMessage(GetPluginInfoResponse.ManifestEntry)

GetPluginCapabilitiesRequest = _reflection.GeneratedProtocolMessageType('GetPluginCapabilitiesRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETPLUGINCAPABILITIESREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.GetPluginCapabilitiesRequest)
  ))
_sym_db.RegisterMessage(GetPluginCapabilitiesRequest)

GetPluginCapabilitiesResponse = _reflection.GeneratedProtocolMessageType('GetPluginCapabilitiesResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETPLUGINCAPABILITIESRESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.GetPluginCapabilitiesResponse)
  ))
_sym_db.RegisterMessage(GetPluginCapabilitiesResponse)

PluginCapability = _reflection.GeneratedProtocolMessageType('PluginCapability', (_message.Message,), dict(

  Service = _reflection.GeneratedProtocolMessageType('Service', (_message.Message,), dict(
    DESCRIPTOR = _PLUGINCAPABILITY_SERVICE,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.PluginCapability.Service)
    ))
  ,
  DESCRIPTOR = _PLUGINCAPABILITY,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.PluginCapability)
  ))
_sym_db.RegisterMessage(PluginCapability)
_sym_db.RegisterMessage(PluginCapability.Service)

ProbeRequest = _reflection.GeneratedProtocolMessageType('ProbeRequest', (_message.Message,), dict(
  DESCRIPTOR = _PROBEREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.ProbeRequest)
  ))
_sym_db.RegisterMessage(ProbeRequest)

ProbeResponse = _reflection.GeneratedProtocolMessageType('ProbeResponse', (_message.Message,), dict(
  DESCRIPTOR = _PROBERESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.ProbeResponse)
  ))
_sym_db.RegisterMessage(ProbeResponse)

CreateVolumeRequest = _reflection.GeneratedProtocolMessageType('CreateVolumeRequest', (_message.Message,), dict(

  ParametersEntry = _reflection.GeneratedProtocolMessageType('ParametersEntry', (_message.Message,), dict(
    DESCRIPTOR = _CREATEVOLUMEREQUEST_PARAMETERSENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.CreateVolumeRequest.ParametersEntry)
    ))
  ,

  ControllerCreateSecretsEntry = _reflection.GeneratedProtocolMessageType('ControllerCreateSecretsEntry', (_message.Message,), dict(
    DESCRIPTOR = _CREATEVOLUMEREQUEST_CONTROLLERCREATESECRETSENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.CreateVolumeRequest.ControllerCreateSecretsEntry)
    ))
  ,
  DESCRIPTOR = _CREATEVOLUMEREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.CreateVolumeRequest)
  ))
_sym_db.RegisterMessage(CreateVolumeRequest)
_sym_db.RegisterMessage(CreateVolumeRequest.ParametersEntry)
_sym_db.RegisterMessage(CreateVolumeRequest.ControllerCreateSecretsEntry)

CreateVolumeResponse = _reflection.GeneratedProtocolMessageType('CreateVolumeResponse', (_message.Message,), dict(
  DESCRIPTOR = _CREATEVOLUMERESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.CreateVolumeResponse)
  ))
_sym_db.RegisterMessage(CreateVolumeResponse)

VolumeCapability = _reflection.GeneratedProtocolMessageType('VolumeCapability', (_message.Message,), dict(

  BlockVolume = _reflection.GeneratedProtocolMessageType('BlockVolume', (_message.Message,), dict(
    DESCRIPTOR = _VOLUMECAPABILITY_BLOCKVOLUME,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.VolumeCapability.BlockVolume)
    ))
  ,

  MountVolume = _reflection.GeneratedProtocolMessageType('MountVolume', (_message.Message,), dict(
    DESCRIPTOR = _VOLUMECAPABILITY_MOUNTVOLUME,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.VolumeCapability.MountVolume)
    ))
  ,

  AccessMode = _reflection.GeneratedProtocolMessageType('AccessMode', (_message.Message,), dict(
    DESCRIPTOR = _VOLUMECAPABILITY_ACCESSMODE,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.VolumeCapability.AccessMode)
    ))
  ,
  DESCRIPTOR = _VOLUMECAPABILITY,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.VolumeCapability)
  ))
_sym_db.RegisterMessage(VolumeCapability)
_sym_db.RegisterMessage(VolumeCapability.BlockVolume)
_sym_db.RegisterMessage(VolumeCapability.MountVolume)
_sym_db.RegisterMessage(VolumeCapability.AccessMode)

CapacityRange = _reflection.GeneratedProtocolMessageType('CapacityRange', (_message.Message,), dict(
  DESCRIPTOR = _CAPACITYRANGE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.CapacityRange)
  ))
_sym_db.RegisterMessage(CapacityRange)

Volume = _reflection.GeneratedProtocolMessageType('Volume', (_message.Message,), dict(

  AttributesEntry = _reflection.GeneratedProtocolMessageType('AttributesEntry', (_message.Message,), dict(
    DESCRIPTOR = _VOLUME_ATTRIBUTESENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.Volume.AttributesEntry)
    ))
  ,
  DESCRIPTOR = _VOLUME,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.Volume)
  ))
_sym_db.RegisterMessage(Volume)
_sym_db.RegisterMessage(Volume.AttributesEntry)

DeleteVolumeRequest = _reflection.GeneratedProtocolMessageType('DeleteVolumeRequest', (_message.Message,), dict(

  ControllerDeleteSecretsEntry = _reflection.GeneratedProtocolMessageType('ControllerDeleteSecretsEntry', (_message.Message,), dict(
    DESCRIPTOR = _DELETEVOLUMEREQUEST_CONTROLLERDELETESECRETSENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.DeleteVolumeRequest.ControllerDeleteSecretsEntry)
    ))
  ,
  DESCRIPTOR = _DELETEVOLUMEREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.DeleteVolumeRequest)
  ))
_sym_db.RegisterMessage(DeleteVolumeRequest)
_sym_db.RegisterMessage(DeleteVolumeRequest.ControllerDeleteSecretsEntry)

DeleteVolumeResponse = _reflection.GeneratedProtocolMessageType('DeleteVolumeResponse', (_message.Message,), dict(
  DESCRIPTOR = _DELETEVOLUMERESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.DeleteVolumeResponse)
  ))
_sym_db.RegisterMessage(DeleteVolumeResponse)

ControllerPublishVolumeRequest = _reflection.GeneratedProtocolMessageType('ControllerPublishVolumeRequest', (_message.Message,), dict(

  ControllerPublishSecretsEntry = _reflection.GeneratedProtocolMessageType('ControllerPublishSecretsEntry', (_message.Message,), dict(
    DESCRIPTOR = _CONTROLLERPUBLISHVOLUMEREQUEST_CONTROLLERPUBLISHSECRETSENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.ControllerPublishVolumeRequest.ControllerPublishSecretsEntry)
    ))
  ,

  VolumeAttributesEntry = _reflection.GeneratedProtocolMessageType('VolumeAttributesEntry', (_message.Message,), dict(
    DESCRIPTOR = _CONTROLLERPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.ControllerPublishVolumeRequest.VolumeAttributesEntry)
    ))
  ,
  DESCRIPTOR = _CONTROLLERPUBLISHVOLUMEREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.ControllerPublishVolumeRequest)
  ))
_sym_db.RegisterMessage(ControllerPublishVolumeRequest)
_sym_db.RegisterMessage(ControllerPublishVolumeRequest.ControllerPublishSecretsEntry)
_sym_db.RegisterMessage(ControllerPublishVolumeRequest.VolumeAttributesEntry)

ControllerPublishVolumeResponse = _reflection.GeneratedProtocolMessageType('ControllerPublishVolumeResponse', (_message.Message,), dict(

  PublishInfoEntry = _reflection.GeneratedProtocolMessageType('PublishInfoEntry', (_message.Message,), dict(
    DESCRIPTOR = _CONTROLLERPUBLISHVOLUMERESPONSE_PUBLISHINFOENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.ControllerPublishVolumeResponse.PublishInfoEntry)
    ))
  ,
  DESCRIPTOR = _CONTROLLERPUBLISHVOLUMERESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.ControllerPublishVolumeResponse)
  ))
_sym_db.RegisterMessage(ControllerPublishVolumeResponse)
_sym_db.RegisterMessage(ControllerPublishVolumeResponse.PublishInfoEntry)

ControllerUnpublishVolumeRequest = _reflection.GeneratedProtocolMessageType('ControllerUnpublishVolumeRequest', (_message.Message,), dict(

  ControllerUnpublishSecretsEntry = _reflection.GeneratedProtocolMessageType('ControllerUnpublishSecretsEntry', (_message.Message,), dict(
    DESCRIPTOR = _CONTROLLERUNPUBLISHVOLUMEREQUEST_CONTROLLERUNPUBLISHSECRETSENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.ControllerUnpublishVolumeRequest.ControllerUnpublishSecretsEntry)
    ))
  ,
  DESCRIPTOR = _CONTROLLERUNPUBLISHVOLUMEREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.ControllerUnpublishVolumeRequest)
  ))
_sym_db.RegisterMessage(ControllerUnpublishVolumeRequest)
_sym_db.RegisterMessage(ControllerUnpublishVolumeRequest.ControllerUnpublishSecretsEntry)

ControllerUnpublishVolumeResponse = _reflection.GeneratedProtocolMessageType('ControllerUnpublishVolumeResponse', (_message.Message,), dict(
  DESCRIPTOR = _CONTROLLERUNPUBLISHVOLUMERESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.ControllerUnpublishVolumeResponse)
  ))
_sym_db.RegisterMessage(ControllerUnpublishVolumeResponse)

ValidateVolumeCapabilitiesRequest = _reflection.GeneratedProtocolMessageType('ValidateVolumeCapabilitiesRequest', (_message.Message,), dict(

  VolumeAttributesEntry = _reflection.GeneratedProtocolMessageType('VolumeAttributesEntry', (_message.Message,), dict(
    DESCRIPTOR = _VALIDATEVOLUMECAPABILITIESREQUEST_VOLUMEATTRIBUTESENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.ValidateVolumeCapabilitiesRequest.VolumeAttributesEntry)
    ))
  ,
  DESCRIPTOR = _VALIDATEVOLUMECAPABILITIESREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.ValidateVolumeCapabilitiesRequest)
  ))
_sym_db.RegisterMessage(ValidateVolumeCapabilitiesRequest)
_sym_db.RegisterMessage(ValidateVolumeCapabilitiesRequest.VolumeAttributesEntry)

ValidateVolumeCapabilitiesResponse = _reflection.GeneratedProtocolMessageType('ValidateVolumeCapabilitiesResponse', (_message.Message,), dict(
  DESCRIPTOR = _VALIDATEVOLUMECAPABILITIESRESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.ValidateVolumeCapabilitiesResponse)
  ))
_sym_db.RegisterMessage(ValidateVolumeCapabilitiesResponse)

ListVolumesRequest = _reflection.GeneratedProtocolMessageType('ListVolumesRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTVOLUMESREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.ListVolumesRequest)
  ))
_sym_db.RegisterMessage(ListVolumesRequest)

ListVolumesResponse = _reflection.GeneratedProtocolMessageType('ListVolumesResponse', (_message.Message,), dict(

  Entry = _reflection.GeneratedProtocolMessageType('Entry', (_message.Message,), dict(
    DESCRIPTOR = _LISTVOLUMESRESPONSE_ENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.ListVolumesResponse.Entry)
    ))
  ,
  DESCRIPTOR = _LISTVOLUMESRESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.ListVolumesResponse)
  ))
_sym_db.RegisterMessage(ListVolumesResponse)
_sym_db.RegisterMessage(ListVolumesResponse.Entry)

GetCapacityRequest = _reflection.GeneratedProtocolMessageType('GetCapacityRequest', (_message.Message,), dict(

  ParametersEntry = _reflection.GeneratedProtocolMessageType('ParametersEntry', (_message.Message,), dict(
    DESCRIPTOR = _GETCAPACITYREQUEST_PARAMETERSENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.GetCapacityRequest.ParametersEntry)
    ))
  ,
  DESCRIPTOR = _GETCAPACITYREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.GetCapacityRequest)
  ))
_sym_db.RegisterMessage(GetCapacityRequest)
_sym_db.RegisterMessage(GetCapacityRequest.ParametersEntry)

GetCapacityResponse = _reflection.GeneratedProtocolMessageType('GetCapacityResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETCAPACITYRESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.GetCapacityResponse)
  ))
_sym_db.RegisterMessage(GetCapacityResponse)

ControllerGetCapabilitiesRequest = _reflection.GeneratedProtocolMessageType('ControllerGetCapabilitiesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CONTROLLERGETCAPABILITIESREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.ControllerGetCapabilitiesRequest)
  ))
_sym_db.RegisterMessage(ControllerGetCapabilitiesRequest)

ControllerGetCapabilitiesResponse = _reflection.GeneratedProtocolMessageType('ControllerGetCapabilitiesResponse', (_message.Message,), dict(
  DESCRIPTOR = _CONTROLLERGETCAPABILITIESRESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.ControllerGetCapabilitiesResponse)
  ))
_sym_db.RegisterMessage(ControllerGetCapabilitiesResponse)

ControllerServiceCapability = _reflection.GeneratedProtocolMessageType('ControllerServiceCapability', (_message.Message,), dict(

  RPC = _reflection.GeneratedProtocolMessageType('RPC', (_message.Message,), dict(
    DESCRIPTOR = _CONTROLLERSERVICECAPABILITY_RPC,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.ControllerServiceCapability.RPC)
    ))
  ,
  DESCRIPTOR = _CONTROLLERSERVICECAPABILITY,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.ControllerServiceCapability)
  ))
_sym_db.RegisterMessage(ControllerServiceCapability)
_sym_db.RegisterMessage(ControllerServiceCapability.RPC)

NodeStageVolumeRequest = _reflection.GeneratedProtocolMessageType('NodeStageVolumeRequest', (_message.Message,), dict(

  PublishInfoEntry = _reflection.GeneratedProtocolMessageType('PublishInfoEntry', (_message.Message,), dict(
    DESCRIPTOR = _NODESTAGEVOLUMEREQUEST_PUBLISHINFOENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.NodeStageVolumeRequest.PublishInfoEntry)
    ))
  ,

  NodeStageSecretsEntry = _reflection.GeneratedProtocolMessageType('NodeStageSecretsEntry', (_message.Message,), dict(
    DESCRIPTOR = _NODESTAGEVOLUMEREQUEST_NODESTAGESECRETSENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.NodeStageVolumeRequest.NodeStageSecretsEntry)
    ))
  ,

  VolumeAttributesEntry = _reflection.GeneratedProtocolMessageType('VolumeAttributesEntry', (_message.Message,), dict(
    DESCRIPTOR = _NODESTAGEVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.NodeStageVolumeRequest.VolumeAttributesEntry)
    ))
  ,
  DESCRIPTOR = _NODESTAGEVOLUMEREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.NodeStageVolumeRequest)
  ))
_sym_db.RegisterMessage(NodeStageVolumeRequest)
_sym_db.RegisterMessage(NodeStageVolumeRequest.PublishInfoEntry)
_sym_db.RegisterMessage(NodeStageVolumeRequest.NodeStageSecretsEntry)
_sym_db.RegisterMessage(NodeStageVolumeRequest.VolumeAttributesEntry)

NodeStageVolumeResponse = _reflection.GeneratedProtocolMessageType('NodeStageVolumeResponse', (_message.Message,), dict(
  DESCRIPTOR = _NODESTAGEVOLUMERESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.NodeStageVolumeResponse)
  ))
_sym_db.RegisterMessage(NodeStageVolumeResponse)

NodeUnstageVolumeRequest = _reflection.GeneratedProtocolMessageType('NodeUnstageVolumeRequest', (_message.Message,), dict(
  DESCRIPTOR = _NODEUNSTAGEVOLUMEREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.NodeUnstageVolumeRequest)
  ))
_sym_db.RegisterMessage(NodeUnstageVolumeRequest)

NodeUnstageVolumeResponse = _reflection.GeneratedProtocolMessageType('NodeUnstageVolumeResponse', (_message.Message,), dict(
  DESCRIPTOR = _NODEUNSTAGEVOLUMERESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.NodeUnstageVolumeResponse)
  ))
_sym_db.RegisterMessage(NodeUnstageVolumeResponse)

NodePublishVolumeRequest = _reflection.GeneratedProtocolMessageType('NodePublishVolumeRequest', (_message.Message,), dict(

  PublishInfoEntry = _reflection.GeneratedProtocolMessageType('PublishInfoEntry', (_message.Message,), dict(
    DESCRIPTOR = _NODEPUBLISHVOLUMEREQUEST_PUBLISHINFOENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.NodePublishVolumeRequest.PublishInfoEntry)
    ))
  ,

  NodePublishSecretsEntry = _reflection.GeneratedProtocolMessageType('NodePublishSecretsEntry', (_message.Message,), dict(
    DESCRIPTOR = _NODEPUBLISHVOLUMEREQUEST_NODEPUBLISHSECRETSENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.NodePublishVolumeRequest.NodePublishSecretsEntry)
    ))
  ,

  VolumeAttributesEntry = _reflection.GeneratedProtocolMessageType('VolumeAttributesEntry', (_message.Message,), dict(
    DESCRIPTOR = _NODEPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.NodePublishVolumeRequest.VolumeAttributesEntry)
    ))
  ,
  DESCRIPTOR = _NODEPUBLISHVOLUMEREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.NodePublishVolumeRequest)
  ))
_sym_db.RegisterMessage(NodePublishVolumeRequest)
_sym_db.RegisterMessage(NodePublishVolumeRequest.PublishInfoEntry)
_sym_db.RegisterMessage(NodePublishVolumeRequest.NodePublishSecretsEntry)
_sym_db.RegisterMessage(NodePublishVolumeRequest.VolumeAttributesEntry)

NodePublishVolumeResponse = _reflection.GeneratedProtocolMessageType('NodePublishVolumeResponse', (_message.Message,), dict(
  DESCRIPTOR = _NODEPUBLISHVOLUMERESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.NodePublishVolumeResponse)
  ))
_sym_db.RegisterMessage(NodePublishVolumeResponse)

NodeUnpublishVolumeRequest = _reflection.GeneratedProtocolMessageType('NodeUnpublishVolumeRequest', (_message.Message,), dict(
  DESCRIPTOR = _NODEUNPUBLISHVOLUMEREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.NodeUnpublishVolumeRequest)
  ))
_sym_db.RegisterMessage(NodeUnpublishVolumeRequest)

NodeUnpublishVolumeResponse = _reflection.GeneratedProtocolMessageType('NodeUnpublishVolumeResponse', (_message.Message,), dict(
  DESCRIPTOR = _NODEUNPUBLISHVOLUMERESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.NodeUnpublishVolumeResponse)
  ))
_sym_db.RegisterMessage(NodeUnpublishVolumeResponse)

NodeGetIdRequest = _reflection.GeneratedProtocolMessageType('NodeGetIdRequest', (_message.Message,), dict(
  DESCRIPTOR = _NODEGETIDREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.NodeGetIdRequest)
  ))
_sym_db.RegisterMessage(NodeGetIdRequest)

NodeGetIdResponse = _reflection.GeneratedProtocolMessageType('NodeGetIdResponse', (_message.Message,), dict(
  DESCRIPTOR = _NODEGETIDRESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.NodeGetIdResponse)
  ))
_sym_db.RegisterMessage(NodeGetIdResponse)

NodeGetCapabilitiesRequest = _reflection.GeneratedProtocolMessageType('NodeGetCapabilitiesRequest', (_message.Message,), dict(
  DESCRIPTOR = _NODEGETCAPABILITIESREQUEST,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.NodeGetCapabilitiesRequest)
  ))
_sym_db.RegisterMessage(NodeGetCapabilitiesRequest)

NodeGetCapabilitiesResponse = _reflection.GeneratedProtocolMessageType('NodeGetCapabilitiesResponse', (_message.Message,), dict(
  DESCRIPTOR = _NODEGETCAPABILITIESRESPONSE,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.NodeGetCapabilitiesResponse)
  ))
_sym_db.RegisterMessage(NodeGetCapabilitiesResponse)

NodeServiceCapability = _reflection.GeneratedProtocolMessageType('NodeServiceCapability', (_message.Message,), dict(

  RPC = _reflection.GeneratedProtocolMessageType('RPC', (_message.Message,), dict(
    DESCRIPTOR = _NODESERVICECAPABILITY_RPC,
    __module__ = 'csi_pb2'
    # @@protoc_insertion_point(class_scope:csi.v0.NodeServiceCapability.RPC)
    ))
  ,
  DESCRIPTOR = _NODESERVICECAPABILITY,
  __module__ = 'csi_pb2'
  # @@protoc_insertion_point(class_scope:csi.v0.NodeServiceCapability)
  ))
_sym_db.RegisterMessage(NodeServiceCapability)
_sym_db.RegisterMessage(NodeServiceCapability.RPC)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\003csi'))
_GETPLUGININFORESPONSE_MANIFESTENTRY.has_options = True
_GETPLUGININFORESPONSE_MANIFESTENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CREATEVOLUMEREQUEST_PARAMETERSENTRY.has_options = True
_CREATEVOLUMEREQUEST_PARAMETERSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CREATEVOLUMEREQUEST_CONTROLLERCREATESECRETSENTRY.has_options = True
_CREATEVOLUMEREQUEST_CONTROLLERCREATESECRETSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_VOLUME_ATTRIBUTESENTRY.has_options = True
_VOLUME_ATTRIBUTESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_DELETEVOLUMEREQUEST_CONTROLLERDELETESECRETSENTRY.has_options = True
_DELETEVOLUMEREQUEST_CONTROLLERDELETESECRETSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CONTROLLERPUBLISHVOLUMEREQUEST_CONTROLLERPUBLISHSECRETSENTRY.has_options = True
_CONTROLLERPUBLISHVOLUMEREQUEST_CONTROLLERPUBLISHSECRETSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CONTROLLERPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY.has_options = True
_CONTROLLERPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CONTROLLERPUBLISHVOLUMERESPONSE_PUBLISHINFOENTRY.has_options = True
_CONTROLLERPUBLISHVOLUMERESPONSE_PUBLISHINFOENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CONTROLLERUNPUBLISHVOLUMEREQUEST_CONTROLLERUNPUBLISHSECRETSENTRY.has_options = True
_CONTROLLERUNPUBLISHVOLUMEREQUEST_CONTROLLERUNPUBLISHSECRETSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_VALIDATEVOLUMECAPABILITIESREQUEST_VOLUMEATTRIBUTESENTRY.has_options = True
_VALIDATEVOLUMECAPABILITIESREQUEST_VOLUMEATTRIBUTESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_GETCAPACITYREQUEST_PARAMETERSENTRY.has_options = True
_GETCAPACITYREQUEST_PARAMETERSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_NODESTAGEVOLUMEREQUEST_PUBLISHINFOENTRY.has_options = True
_NODESTAGEVOLUMEREQUEST_PUBLISHINFOENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_NODESTAGEVOLUMEREQUEST_NODESTAGESECRETSENTRY.has_options = True
_NODESTAGEVOLUMEREQUEST_NODESTAGESECRETSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_NODESTAGEVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY.has_options = True
_NODESTAGEVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_NODEPUBLISHVOLUMEREQUEST_PUBLISHINFOENTRY.has_options = True
_NODEPUBLISHVOLUMEREQUEST_PUBLISHINFOENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_NODEPUBLISHVOLUMEREQUEST_NODEPUBLISHSECRETSENTRY.has_options = True
_NODEPUBLISHVOLUMEREQUEST_NODEPUBLISHSECRETSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_NODEPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY.has_options = True
_NODEPUBLISHVOLUMEREQUEST_VOLUMEATTRIBUTESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))

_IDENTITY = _descriptor.ServiceDescriptor(
  name='Identity',
  full_name='csi.v0.Identity',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=5812,
  serialized_end=6062,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetPluginInfo',
    full_name='csi.v0.Identity.GetPluginInfo',
    index=0,
    containing_service=None,
    input_type=_GETPLUGININFOREQUEST,
    output_type=_GETPLUGININFORESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetPluginCapabilities',
    full_name='csi.v0.Identity.GetPluginCapabilities',
    index=1,
    containing_service=None,
    input_type=_GETPLUGINCAPABILITIESREQUEST,
    output_type=_GETPLUGINCAPABILITIESRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Probe',
    full_name='csi.v0.Identity.Probe',
    index=2,
    containing_service=None,
    input_type=_PROBEREQUEST,
    output_type=_PROBERESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_IDENTITY)

DESCRIPTOR.services_by_name['Identity'] = _IDENTITY


_CONTROLLER = _descriptor.ServiceDescriptor(
  name='Controller',
  full_name='csi.v0.Controller',
  file=DESCRIPTOR,
  index=1,
  options=None,
  serialized_start=6065,
  serialized_end=6840,
  methods=[
  _descriptor.MethodDescriptor(
    name='CreateVolume',
    full_name='csi.v0.Controller.CreateVolume',
    index=0,
    containing_service=None,
    input_type=_CREATEVOLUMEREQUEST,
    output_type=_CREATEVOLUMERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteVolume',
    full_name='csi.v0.Controller.DeleteVolume',
    index=1,
    containing_service=None,
    input_type=_DELETEVOLUMEREQUEST,
    output_type=_DELETEVOLUMERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ControllerPublishVolume',
    full_name='csi.v0.Controller.ControllerPublishVolume',
    index=2,
    containing_service=None,
    input_type=_CONTROLLERPUBLISHVOLUMEREQUEST,
    output_type=_CONTROLLERPUBLISHVOLUMERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ControllerUnpublishVolume',
    full_name='csi.v0.Controller.ControllerUnpublishVolume',
    index=3,
    containing_service=None,
    input_type=_CONTROLLERUNPUBLISHVOLUMEREQUEST,
    output_type=_CONTROLLERUNPUBLISHVOLUMERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ValidateVolumeCapabilities',
    full_name='csi.v0.Controller.ValidateVolumeCapabilities',
    index=4,
    containing_service=None,
    input_type=_VALIDATEVOLUMECAPABILITIESREQUEST,
    output_type=_VALIDATEVOLUMECAPABILITIESRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ListVolumes',
    full_name='csi.v0.Controller.ListVolumes',
    index=5,
    containing_service=None,
    input_type=_LISTVOLUMESREQUEST,
    output_type=_LISTVOLUMESRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCapacity',
    full_name='csi.v0.Controller.GetCapacity',
    index=6,
    containing_service=None,
    input_type=_GETCAPACITYREQUEST,
    output_type=_GETCAPACITYRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ControllerGetCapabilities',
    full_name='csi.v0.Controller.ControllerGetCapabilities',
    index=7,
    containing_service=None,
    input_type=_CONTROLLERGETCAPABILITIESREQUEST,
    output_type=_CONTROLLERGETCAPABILITIESRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CONTROLLER)

DESCRIPTOR.services_by_name['Controller'] = _CONTROLLER


_NODE = _descriptor.ServiceDescriptor(
  name='Node',
  full_name='csi.v0.Node',
  file=DESCRIPTOR,
  index=2,
  options=None,
  serialized_start=6843,
  serialized_end=7383,
  methods=[
  _descriptor.MethodDescriptor(
    name='NodeStageVolume',
    full_name='csi.v0.Node.NodeStageVolume',
    index=0,
    containing_service=None,
    input_type=_NODESTAGEVOLUMEREQUEST,
    output_type=_NODESTAGEVOLUMERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='NodeUnstageVolume',
    full_name='csi.v0.Node.NodeUnstageVolume',
    index=1,
    containing_service=None,
    input_type=_NODEUNSTAGEVOLUMEREQUEST,
    output_type=_NODEUNSTAGEVOLUMERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='NodePublishVolume',
    full_name='csi.v0.Node.NodePublishVolume',
    index=2,
    containing_service=None,
    input_type=_NODEPUBLISHVOLUMEREQUEST,
    output_type=_NODEPUBLISHVOLUMERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='NodeUnpublishVolume',
    full_name='csi.v0.Node.NodeUnpublishVolume',
    index=3,
    containing_service=None,
    input_type=_NODEUNPUBLISHVOLUMEREQUEST,
    output_type=_NODEUNPUBLISHVOLUMERESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='NodeGetId',
    full_name='csi.v0.Node.NodeGetId',
    index=4,
    containing_service=None,
    input_type=_NODEGETIDREQUEST,
    output_type=_NODEGETIDRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='NodeGetCapabilities',
    full_name='csi.v0.Node.NodeGetCapabilities',
    index=5,
    containing_service=None,
    input_type=_NODEGETCAPABILITIESREQUEST,
    output_type=_NODEGETCAPABILITIESRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_NODE)

DESCRIPTOR.services_by_name['Node'] = _NODE

# @@protoc_insertion_point(module_scope)
