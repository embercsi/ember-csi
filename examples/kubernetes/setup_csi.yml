# We need to retry this command, as the API may still be restarting
- name: Allow Node role to create attachments
  shell: "kubectl get -o yaml clusterroles/system:node | perl -0pe 's/volumeattachments\n  verbs:\n/volumeattachments\n  verbs:\n  - create\n  - list\n  - update\n  - watch\n  - patch\n  - delete\n/' | kubectl replace -f -"
  # register: res
  # until: res | success
  # retries: 5
  # delay: 10

- name: Bind master to Node role
  shell: 'kubectl patch clusterrolebindings/system:node -p ''{"subjects": [{"kind": "User", "name": "system:node:master", "namespace": "kube-system"}]}'''

- name: Bind nodes to Node role
  shell: "kubectl get -o yaml clusterrolebindings/system:node | perl -0pe 's/subjects:\n/subjects:\n- kind: User\n{{'  '}}name: system:node:{{ item }}\n{{'  '}}namespace: kube-system\n/' | tee -a bind_node.txt | kubectl replace -f -"
  with_items: "{{ groups['nodes'] }}"

- name: Remove API NodeRestriction
  lineinfile:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    regexp: '- --enable-admission-plugins=NodeRestriction'
    state: absent

- name: Remove API Node authorization
  lineinfile:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    regexp: '    - --authorization-mode=Node,RBAC'
    line: '    - --authorization-mode=RBAC'
    state: present

- name: Restart API containers
  shell: docker restart $(docker ps --filter "name=apiserver_kube" --format "{{'{{'}}.ID{{'}}'}}") || true

- name: Stop Scheduler and Manager containers
  shell: docker restart $(docker ps --filter "name=scheduler_kube|manager_kube" --format "{{'{{'}}.ID{{'}}'}}") || true

- name: Copy YML files
  copy:
    src: kubeyml
    dest: /home/vagrant
    owner: vagrant
    group: vagrant

- name: Set CSI controller
  command: kubectl create -f /home/vagrant/kubeyml/controller.yml

- name: Create Storage Class
  command: kubectl create -f /home/vagrant/kubeyml/storage-class.yml

- name: Start CSI nodes
  command: kubectl create -f /home/vagrant/kubeyml/node.yml
