---
apiVersion: v1
kind: Namespace
metadata:
  name: ember-csi

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ember-csi-controller-sa
  namespace: ember-csi

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ember-csi-node-sa
  namespace: ember-csi

---
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: ember-csi-scc
allowPrivilegedContainer: true
allowPrivilegeEscalation: true
allowHostDirVolumePlugin: true
allowHostIPC: false
allowHostNetwork: true
allowHostPID: false
allowHostPorts: false
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
fsGroup:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
users:
- system:serviceaccount:ember-csi:ember-csi-node-sa
- system:serviceaccount:ember-csi:ember-csi-controller-sa
groups: []
volumes:
- '*'

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-controller-cr
rules:
  # Allow managing ember resources
  - apiGroups: ['ember-csi.io']
    resources: ['*']
    verbs: ['*']
  # Allow listing and creating CRDs
  - apiGroups: ['apiextensions.k8s.io']
    resources: ['customresourcedefinitions']
    verbs: ['list', 'create']
  - apiGroups: ['']
    resources: ['persistentvolumes']
    verbs: ['create', 'delete', 'get', 'list', 'watch', 'update']
  - apiGroups: ['']
    resources: ['secrets']
    verbs: ['get', 'list']
  - apiGroups: ['']
    resources: ['persistentvolumeclaims']
    verbs: ['get', 'list', 'watch', 'update']
  - apiGroups: ['']
    resources: ['nodes']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['storage.k8s.io']
    resources: ['volumeattachments']
    verbs: ['get', 'list', 'watch', 'update']
  - apiGroups: ['storage.k8s.io']
    resources: ['storageclasses']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['']
    resources: ['events']
    verbs: ['list', 'watch', 'create', 'update', 'patch']
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-controller-rb
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: csi-controller-cr
subjects:
- kind: ServiceAccount
  name: ember-csi-controller-sa
  namespace: ember-csi
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: csi-controller
spec:
  serviceName: csi-controller
  replicas: 1
  template:
    metadata:
      labels:
        app: csi-controller
    spec:
      serviceAccount: ember-csi-controller-sa
      # iSCSI only the very latest Open-iSCSI supports namespaces
      hostNetwork: true
      containers:
      - name: external-provisioner
        image: quay.io/k8scsi/csi-provisioner:v0.3.0
        args:
        - --v=5
        - --provisioner=io.ember-csi
        - --csi-address=/csi-data/csi.sock
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
      - name: external-attacher
        image: quay.io/k8scsi/csi-attacher:v0.3.0
        args:
        - --v=5
        - --csi-address=/csi-data/csi.sock
        volumeMounts:
        - mountPath: /csi-data
          name: socket-dir
      - name: csi-driver
        image: akrog/ember-csi:master
        imagePullPolicy: Always
        terminationMessagePath: "/tmp/my-log"
        securityContext:
          privileged: true
          allowPrivilegeEscalation: true
        env:
        - name: PYTHONUNBUFFERED
          value: '0'
        - name: CSI_ENDPOINT
          value: unix:///csi-data/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CSI_MODE
          value: controller
        - name: X_CSI_PERSISTENCE_CONFIG
          value: '{"storage":"crd"}'
        - name: X_CSI_BACKEND_CONFIG
          value: '{"volume_backend_name": "rbd", "volume_driver": "cinder.volume.drivers.rbd.RBDDriver", "rbd_user": "cinder", "rbd_pool": "cinder_volumes", "rbd_ceph_conf": "/etc/ceph/ceph.conf", "rbd_keyring_conf": "/etc/ceph/keyring"}'
#          value: '{"iscsi_protocol":"iscsi","iscsi_ip_address":"192.168.10.100","volume_backend_name":"lvm","volume_driver":"cinder.volume.drivers.lvm.LVMVolumeDriver","volume_group":"ember-volumes","iscsi_helper":"lioadm"}'
        volumeMounts:
        - name: socket-dir
          mountPath: /csi-data
        - name: iscsi-dir
          mountPath: /etc/iscsi
          mountPropagation: Bidirectional
        - name: run-dir
          mountPath: /run/udev
          mountPropagation: HostToContainer
        - name: dev-dir
          mountPath: /dev
          mountPropagation: Bidirectional
        - name: lvm-dir
          mountPath: /etc/lvm
          mountPropagation: Bidirectional
        - name: lvm-lock
          mountPath: /var/lock/lvm
          mountPropagation: Bidirectional
        - name: multipath-dir
          mountPath: /etc/multipath
          mountPropagation: Bidirectional
        - name: multipath-conf
          mountPath: /etc/multipath.conf
          mountPropagation: HostToContainer
        - name: modules-dir
          mountPath: /lib/modules
          mountPropagation: HostToContainer
        - name: localtime
          mountPath: /etc/localtime
          mountPropagation: HostToContainer
        - name: ceph-secrets
          mountPath: /etc/ceph
      volumes:
      - name: socket-dir
        emptyDir:
      # Some backends do create volume from snapshot by attaching and dd-ing
      - name: iscsi-dir
        hostPath:
          path: /etc/iscsi
          type: Directory
      - name: run-dir
        hostPath:
          path: /run/udev
      - name: dev-dir
        hostPath:
          path: /dev
      - name: lvm-dir
        hostPath:
          path: /etc/lvm
          type: Directory
      - name: lvm-lock
        hostPath:
          path: /var/lock/lvm
      - name: multipath-dir
        hostPath:
          path: /etc/multipath
      - name: multipath-conf
        hostPath:
          path: /etc/multipath.conf
      - name: modules-dir
        hostPath:
          path: /lib/modules
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: ceph-secrets
        secret:
          secretName: ceph-secrets

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ember-csi-node-sa
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-node-cr
rules:
  # Allow managing ember resources
  - apiGroups: ['ember-csi.io']
    resources: ['*']
    verbs: ['*']
  # Allow listing and creating CRDs
  - apiGroups: ['apiextensions.k8s.io']
    resources: ['customresourcedefinitions']
    verbs: ['list', 'create']
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-node-rb
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: csi-node-cr
subjects:
- kind: ServiceAccount
  name: ember-csi-node-sa
  namespace: ember-csi
---
kind: DaemonSet
apiVersion: apps/v1beta2
metadata:
  name: csi-node
  namespace: ember-csi
spec:
  selector:
    matchLabels:
      app: csi-node
  template:
    metadata:
      labels:
        app: csi-node
    spec:
      serviceAccount: ember-csi-node-sa
      hostNetwork: true
      containers:
        - name: driver-registrar
          image: quay.io/k8scsi/driver-registrar:v0.3.0
          securityContext:
            privileged: true
          args:
          - --v=5
          - --csi-address=/csi-data/csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          volumeMounts:
          - name: kubelet-sock-dir
            mountPath: /var/lib/kubelet/device-plugins
            mountPropagation: Bidirectional
          - mountPath: /csi-data
            name: socket-dir
          - name: mountpoint-dir
            mountPath: /var/lib/kubelet/pods
            mountPropagation: Bidirectional
        - name: csi-driver
          image: akrog/ember-csi:master

          terminationMessagePath: "/tmp/my-log"
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
          imagePullPolicy: Always
          env:
            - name: PYTHONUNBUFFERED
              value: '0'
            - name: CSI_ENDPOINT
              value: unix:///csi-data/csi.sock
            - name: CSI_MODE
              value: node
            - name: X_CSI_PERSISTENCE_CONFIG
              value: '{"storage":"crd"}'
            - name: X_CSI_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
                  #fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi-data
            - name: kubelet-sock-dir
              mountPath: /var/lib/kubelet/device-plugins
              mountPropagation: Bidirectional
            - name: mountpoint-dir
              mountPath: /var/lib/origin/openshift.local.volumes
              mountPropagation: Bidirectional
            - name: dev-dir
              mountPath: /dev
              mountPropagation: Bidirectional
            - name: run-dir
              mountPath: /run/udev
              mountPropagation: HostToContainer
            - name: modules-dir
              mountPath: /lib/modules
              mountPropagation: HostToContainer
            - name: localtime
              mountPath: /etc/localtime
              mountPropagation: HostToContainer
            - name: ceph-secrets
              mountPath: /etc/ceph
      volumes:
        - name: socket-dir
          hostPath:
            #path: /var/lib/origin/openshift.local.volumes/plugins/io.ember-csi
            path: /var/lib/kubelet/plugins/io.ember-csi
            type: DirectoryOrCreate
        - name: kubelet-sock-dir
          hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/origin/openshift.local.volumes/
            type: Directory
        - name: run-dir
          hostPath:
            path: /run/udev
        - name: dev-dir
          hostPath:
            path: /dev
        - name: modules-dir
          hostPath:
            path: /lib/modules
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: ceph-secrets
          secret:
            secretName: ceph-secrets

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ember-csi-sc
  namespace: default
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: io.ember-csi
reclaimPolicy: Delete
volumeBindingMode: Immediate

