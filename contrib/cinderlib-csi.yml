---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cinderlib-csi-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["create", "delete", "get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cinderlib-csi-role
subjects:
  - kind: ServiceAccount
    name: cinderlib-csi
    namespace: csi
roleRef:
  kind: ClusterRole
  name: cinderlib-csi-role
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: cinderlib-csi-controller
  namespace: csi
spec:
  selector:
    matchLabels:
      app: cinderlib-csi
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cinderlib-csi
    spec:
      serviceAccount: cinderlib-csi

      containers:
      - name: csi-attacher
        image: quay.io/k8scsi/csi-attacher:v0.2.0
        args:
          - "--v=5"
          - "--csi-address=$(ADDRESS)"
        env:
          - name: MY_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ADDRESS
            value: /var/run/cinderlib-csi/csi.sock
        volumeMounts:
          - name: socket-dir
            mountPath: /var/run/cinderlib-csi

      - name: csi-provisioner
        image: quay.io/k8scsi/csi-provisioner:v0.2.1
        args:
          - "--v=5"
          - "--provisioner=csi-cinderlibplugin"
          - "--csi-address=$(ADDRESS)"
        env:
          - name: ADDRESS
            value: /var/run/cinderlib-csi/csi.sock
        volumeMounts:
          - name: socket-dir
            mountPath: /var/run/cinderlib-csi

      - name: cinderlib-csi
        image: akrog/cinderlib-csi
        securityContext:
          privileged: true
        env:
        - name: CSI_ENDPOINT
          value: unix:///var/run/cinderlib-csi/csi.sock
        - name: CSI_MODE
          value:  controller
        - name: X_CSI_BACKEND_CONFIG
          valueFrom:
            secretKeyRef:
              name: csi-backend-secret
              key: csi-backend-config
        ports:
        - containerPort: 50051
          name: cinderlib-csi
        volumeMounts:
        - name: ceph-secrets
          mountPath: /etc/ceph
        - name: socket-dir
          mountPath: /var/run/cinderlib-csi

      volumes:
      - name: socket-dir

      - name: ceph-secrets
        secret:
          secretName: ceph-secrets

---

kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: cinderlib-csi-ds
  namespace: csi
spec:
  selector:
    matchLabels:
      app: cinderlib-csi-driver
  template:
    metadata:
      labels:
        app: cinderlib-csi-driver
    spec:
      nodeSelector:
          node-role.kubernetes.io/compute: "true"
      serviceAccount: cinderlib-csi
      containers:
        - name: csi-driver-registrar
          image: quay.io/k8scsi/driver-registrar:v0.2.0
          securityContext:
            privileged: true
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/run/cinderlib-csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /var/run/cinderlib-csi

        - name: cinderlib-csi-driver
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: akrog/cinderlib-csi
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/run/cinderlib-csi/csi.sock

            - name: CSI_MODE
              value: node

            - name: X_CSI_STORAGE_NW_IP
              valueFrom:
                fieldRef:
                  fieldPath: spec.podIP

            - name: X_CSI_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName

            - name: X_CSI_BACKEND_CONFIG
              valueFrom:
                secretKeyRef:
                  name: csi-backend-secret
                  key: csi-backend-config
          ports:
            - containerPort: 50051
              name: cinderlib-csi
          volumeMounts:
            - name: ceph-secrets
              mountPath: /etc/ceph

            - name: socket-dir
              mountPath: /var/run/cinderlib-csi

            - name: dev
              mountPath: /dev
      volumes:
        - name: ceph-secrets
          secret:
            secretName: ceph-secrets

        - name: socket-dir

        - name: dev
          hostPath:
            path: /dev
